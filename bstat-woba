#!/usr/bin/env python

import sys
sys.path.append('/Users/luciancooper/projects/pymodule')
import arrpy
import numpy as np
import pandas as pd

from bbmatrix.core import BBMatrix
from bbsim.data import seasonlib
from bbsim.league import REMSim,wOBAWeightSim,LeagueStatSim

LW_STAT = ['BB','HBP','S','D','T','HR']

def calc_OBP(df):
    # OBP = (S+D+T+HR+BB+HBP)/(AB+BB+HBP+SF)
    n = df[['S','D','T','HR','BB','HBP']].sum(axis=1)
    d = df[['AB','BB','HBP','SF']].sum(axis=1)
    return (n/d).replace([np.inf, -np.inf], np.nan).rename('OBP')

if __name__=='__main__':
    data = seasonlib('bbdata.xml')
    inx = data.yearIndex
    matrix_rem = BBMatrix(inx,REMSim.dcols,dtype=REMSim.dtype)
    matrix_oba = BBMatrix(inx,wOBAWeightSim.dcols,dtype=wOBAWeightSim.dtype)
    matrix_mlb = BBMatrix(inx,LeagueStatSim.dcols,dtype=LeagueStatSim.dtype)

    sim_rem = REMSim(matrix_rem)
    sim_woba = wOBAWeightSim(matrix_rem,matrix_oba)
    sim_mlb = LeagueStatSim(matrix_mlb)

    print('Simulating REM',file=sys.stderr)
    data.run(sim_rem)
    print('Simulating wOBA',file=sys.stderr)
    data.run(sim_woba)
    print('Simulating MLB',file=sys.stderr)
    data.run(sim_mlb)
    
    df_oba = frame_oba.to_dataframe()
    df_mlb = frame_mlb.to_dataframe()
    lw = pd.concat([sum([df_oba[x] for x in ['O','E','K']]).rename('O'),df_oba[['BB','IBB','HBP','I','S','D','T','HR']]],axis=1).applymap(float)
    adj_lw = pd.concat([(lw[x]-lw['O']).rename(x) for x in LW_STAT],axis=1)
    OBP = calc_OBP(df_mlb)
    wOBA = ((df_mlb[LW_STAT]*adj_lw[LW_STAT]).sum(axis=1)/df_mlb[['AB','BB','SF','HBP']].sum(axis=1)).rename('wOBA')
    wOBAScale = (OBP/wOBA).rename('wOBAScale')
    wOBA_lw = adj_lw.mul(wOBAScale,axis=0)
    pd.concat([OBP,wOBA,wOBAScale,wOBA_lw],axis=1).to_csv(sys.stdout,index=True)
