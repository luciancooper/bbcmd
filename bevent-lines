#!/usr/bin/env python

import re
import sys

def quicksort(a):
    if (len(a)<=1): return a
    p = a[len(a)//2]
    l = [x for x in a if x<p]
    r = [x for x in a if x>p]
    return quicksort(l)+[p]+quicksort(r)

def match_indexes(regex,file):
    with open(file,'r') as f:
        for i,l in enumerate(f):
            if re.search(regex,l.strip()) != None:
                yield i

def match_lines(file,regex,pre,post):
    inx = quicksort([a for b in [[*range(i-pre,i+1+post)] for i in match_indexes(regex,file)] for a in b])
    if len(inx) == 0:
        return
    with open(file,'r') as f:
        i = 0
        for x in inx:
            if x-i > 0:
                yield ' ... '
            while i < x:
                next(f)
                i=i+1
            l = next(f).strip()
            yield f"[{x}] '{l}'"
            i = i+1
        try:
            next(f)
            yield ' ... '
        except StopIteration:
            pass


def main(*args):
    if len(args) < 2:
        print("Must Provide at least: 'filename' 'regex'",file=sys.stderr)

    file,regex = args[0:2]
    pre = int(args[2]) if len(args) > 2 else 0
    post = int(args[3]) if len(args) > 3 else 0
    for l in match_lines(file,regex,pre,post):
        print(l)


if __name__=='__main__':
    main(*sys.argv[1:])
